# Interpolation and Gaussian quadrature



_Polynomial interpolation_ is the process of finding a polynomial that equals data at a precise set of points.
_Quadrature_ is the act of approximating an integral by a weighted sum:
$$
\int_a^b f(x) w(x) {\rm d}x ‚âà \sum_{j=1}^n w_j f(x_j).
$$
In these notes we see that the two concepts are intrinsically linked:  interpolation leads naturally
to quadrature rules. Moreover, by using a set of points $x_j$ linked to orthogonal polynomials we get
significantly more accurate rules, and in fact can use quadrature to compute expansions in orthogonal polynomials that
interpolate. That is, we can mirror the link between the Trapezium rule, Fourier series, and interpolation but
now for polynomials.


1. Polynomial Interpolation: we describe how to interpolate a function by a polynomial.
3. Truncated Jacobi matrices: we see that truncated Jacobi matrices are diagonalisable
in terms of orthogonal polynomials and their zeros. 
2. Interpolatory quadrature rule: polynomial interpolation leads naturally to ways to integrate
functions, but onely realisable in the simplest cases.
3. Gaussian quadrature: Using roots of orthogonal polynomials and truncated Jacobi matrices 
leads naturally to an efficiently
computable interpolatory quadrature rule. The _miracle_ is its exact for twice as many polynomials as
expected.



## 1. Polynomial Interpolation

We already saw a special case of polynomial interpolation, where we saw that the polynomial
$$
f(z) ‚âà ‚àë_{k=0}^{n-1} fÃÇ_k^n z^k
$$
equaled $f$ at evenly spaced points on the unit circle: ${\rm e}^{{\rm i} 2œÄ j/n}$. 
But here we consider the following:

**Definition (interpolatory polynomial)** Given $n$ distinct points $x_1,‚Ä¶,x_n ‚àà ‚Ñù$ 
and $n$ _samples_ $f_1,‚Ä¶,f_n ‚àà ‚Ñù$, a degree $n-1$
_interpolatory polynomial_ $p(x)$ satisfies
$$
p(x_j) = f_j
$$

The easiest way to solve this problem is to invert the Vandermonde system:

**Definition (Vandermonde)** The _Vandermonde matrix_ associated with $n$ distinct points $x_1,‚Ä¶,x_n ‚àà ‚Ñù$
is the matrix
$$
V := \begin{bmatrix} 1 & x_1 & ‚ãØ & x_1^{n-1} \\
                    ‚ãÆ & ‚ãÆ & ‚ã± & ‚ãÆ \\
                    1 & x_n & ‚ãØ & x_n^{n-1}
                    \end{bmatrix}
$$

**Proposition (interpolatory polynomial uniqueness)** 
The interpolatory polynomial is unique, and the Vandermonde matrix is invertible.

**Proof**
Suppose $p$ and $pÃÉ$ are both interpolatory polynomials. Then $p(x) - pÃÉ(x)$ vanishes at $n$ distinct points $x_j$. By the fundamental theorem of
algebra it must be zero, i.e., $p = pÃÉ$.

For the second part, if $V ùêú = 0$ for $ùêú ‚àà ‚Ñù$ then for $q(x) = c_1 + ‚ãØ + c_n x^{n-1}$ we have
$$
q(x_j) = ùêû_j^‚ä§ V ùêú = 0
$$
hence $q$ vanishes at $n$ distinct points and is therefore 0, i.e., $ùêú = 0$.

‚àé

Thus a quick-and-dirty way to to do interpolation is to invert the Vandermonde matrix
(which we saw in the least squares setting with more samples then coefficients):
```julia
using Plots, LinearAlgebra
f = x -> cos(10x)
n = 5

x = range(0, 1; length=n)# evenly spaced points (BAD for interpolation)
V = x .^ (0:n-1)' # Vandermonde matrix
c = V \ f.(x) # coefficients of interpolatory polynomial
p = x -> dot(c, x .^ (0:n-1))

g = range(0,1; length=1000) # plotting grid
plot(g, f.(g); label="function")
plot!(g, p.(g); label="interpolation")
scatter!(x, f.(x); label="samples")
```

But it turns out we can also construct the interpolatory polynomial directly.
We will use the following with equal $1$ at one grid point
and are zero at the others:

**Definition (Lagrange basis polynomial)** The _Lagrange basis polynomial_ is defined as
$$
‚Ñì_k(x) := ‚àè_{j ‚â† k} {x-x_j \over x_k - x_j} =  {(x-x_1) ‚ãØ(x-x_{k-1})(x-x_{k+1}) ‚ãØ (x-x_n) \over (x_k - x_1) ‚ãØ (x_k - x_{k-1}) (x_k - x_{k+1}) ‚ãØ (x_k - x_n)}
$$

Plugging in the grid points verifies the following:

**Proposition (delta interpolation)**
$$
‚Ñì_k(x_j) = Œ¥_{kj}
$$

We can use these to construct the interpolatory polynomial:

**Theorem (Lagrange interpolation)**
The unique  polynomial of degree at most $n-1$ that interpolates $f$ at $x_j$ is:
$$
p(x) = f(x_1) ‚Ñì_1(x) + ‚ãØ + f(x_n) ‚Ñì_n(x)
$$

**Proof**
Note that
$$
p(x_j) = ‚àë_{k=1}^n f(x_k) ‚Ñì_k(x_j) = f(x_j)
$$
so we just need to show it is unique. Suppose $pÃÉ(x)$ is a  polynomial
of degree at most $n-1$
that also interpolates $f$.


‚àé

**Example** We can interpolate $\exp(x)$ at the points $0,1,2$:
$$
\begin{align*}
p(x) &= ‚Ñì_1(x) + {\rm e} ‚Ñì_2(x) + {\rm e}^2 ‚Ñì_3(x) = 
{(x - 1) (x-2) \over (-1)(-2)} + {\rm e} {x (x-2) \over (-1)} + 
{\rm e}^2 {x (x-1) \over 2} \\
&= (1/2 - {\rm e} +{\rm e}^2/2)x^2
+  (-3/2 + 2 {\rm e}  - {\rm e}^2 /2)  x + 1
\end{align*}
$$


**Remark** Interpolating at evenly spaced points is a really **bad** idea:
interpolation is inheritely ill-conditioned. 
The problem sheet asks you to explore
this experimentally.

## 2. Roots of orthogonal polynomials and truncated Jacobi matrices

We now consider roots (zeros) of orthogonal polynomials $q_n(x)$. This is important as we shall
see they are useful for interpolation and quadrature. For interpolation to be well-defined we
first need to guarantee that the roots are distinct.

**Lemma** $q_n(x)$ has exactly $n$ distinct roots.

**Proof**

Suppose $x_1, ‚Ä¶,x_j$ are the roots where $q_n(x)$ changes sign, that is,
$$
q_n(x) = c_j (x-x_j) + O((x-x_j)^2)
$$
for $c_j ‚â† 0$. Then
$$
q_n(x) (x-x_1) ‚ãØ(x-x_j)
$$
does not change sign.
In other words:
$$
‚ü®q_n,(x-x_1) ‚ãØ(x-x_j) ‚ü© = \int_a^b q_n(x) (x-x_1) ‚ãØ(x-x_j) w(x) {\rm d} x ‚â† 0.
$$
This is only possible if $j = n$ as $q_n(x)$ is orthogonal w.r.t. all lower degree
polynomials.

‚àé

**Definition (truncated Jacobi matrix)** Given a symmetric Jacobi matrix $X$,
(or the weight $w(x)$ whose orthonormal polynomials are associated with $X$)
 the _truncated Jacobi matrix_ is
$$
X_n := \begin{bmatrix} a_0 & b_0 \\
                         b_0 & ‚ã± & ‚ã± \\
                         & ‚ã± & a_{n-2} & b_{n-2} \\
                         && b_{n-2} & a_{n-1} \end{bmatrix} ‚àà ‚Ñù^{n √ó n}
$$



**Lemma (zeros)** The zeros $x_1, ‚Ä¶,x_n$ of $q_n(x)$ are the eigenvalues of the truncated Jacobi matrix $X_n$.
More precisely,
$$
X_n Q_n = Q_n \begin{bmatrix} x_1 \\ & ‚ã± \\ && x_n \end{bmatrix}
$$
for the orthogonal matrix
$$
Q_n = \begin{bmatrix}
q_0(x_1) & ‚ãØ & q_0(x_n) \\
‚ãÆ  & ‚ãØ & ‚ãÆ  \\
q_{n-1}(x_1) & ‚ãØ & q_{n-1}(x_n)
\end{bmatrix} \begin{bmatrix} Œ±_1^{-1} \\ & ‚ã± \\ && Œ±_n^{-1} \end{bmatrix}
$$
where $Œ±_k = \sqrt{q_0(x_k)^2 + ‚ãØ + q_{n-1}(x_k)^2}$.

**Proof**

We construct the eigenvector (noting $b_{n-1} q_n(x_j) = 0$):
$$
X_n \begin{bmatrix} q_0(x_j) \\ ‚ãÆ \\ q_{n-1}(x_j) \end{bmatrix} =
\begin{bmatrix} a_0 q_0(x_j) + b_0 q_1(x_j) \\
 b_0 q_0(x_j) + a_1 q_1(x_j) + b_1 q_2(x_j) \\
‚ãÆ \\
b_{n-3} q_{n-3}(x_j) + a_{n-2} q_{n-2}(x_j) + b_{n-2} q_{n-1}(x_j) \\
b_{n-2} q_{n-2}(x_j) + a_{n-1} q_{n-1}(x_j) + b_{n-1} q_n(x_j)
\end{bmatrix} = x_j \begin{bmatrix} q_0(x_j) \\
 q_1(x_j) \\
‚ãÆ \\
q_{n-1}(x_j)
\end{bmatrix}
$$
The result follows from normalising the eigenvectors. Since $X_n$ is symmetric
the eigenvector matrix is orthogonal.

‚àé

**Example (Chebyshev roots)** Consider $T_n(x) = \cos n {\rm acos}\, x$. The roots 
are $x_j = \cos Œ∏_j$ where $Œ∏_j = (j-1/2)œÄ/n$ for $j = 1,‚Ä¶,n$ are the roots of $\cos n Œ∏$
that are inside $[0,œÄ]$. 

Consider the $n = 3$ case where we have
$$
x_1,x_2,x_3 = \cos(œÄ/6),\cos(œÄ/2),\cos(5œÄ/6) = \sqrt{3}/2,0,-\sqrt{3/2}
$$
We also have from the 3-term recurrence:
$$
\begin{align*}
T_0(x) = 1 \\
T_1(x) = x \\
T_2(x) = 2x T_1(x) - T_0(x) = 2x^2-1 \\
T_3(x) = 2x T_2(x) - T_1(x) = 4x^2-3x
\end{align*}
$$
We orthonormalise by rescaling
$$
\begin{align*}
q_0(x) &= 1/\sqrt{œÄ} \\
q_k(x) &= T_k(x) \sqrt{2}/\sqrt{œÄ}
\end{align*}
$$
so that the Jacobi matrix is symmetric:
$$
x [q_0(x)|q_1(x)|‚ãØ] = [q_0(x)|q_1(x)|‚ãØ] \underbrace{\begin{bmatrix} 0 & 1/\sqrt{2} \\
                            1/\sqrt{2} & 0 & 1/2 \\
                            &1/2 & 0 & 1/2 \\
                             &   & 1/2 & 0 & ‚ã± \\
                              &  && ‚ã± & ‚ã±
\end{bmatrix}}_X
$$
We can then confirm that we have constructed an eigenvector/eigenvalue of the $3 √ó 3$ truncation of the Jacobi matrix,
e.g. at $x_2 = 0$:
$$
\begin{bmatrix} 
0 & 1/\sqrt{2} \\
1/\sqrt{2} & 0 & 1/2 \\
    & 1/2 & 0\end{bmatrix} \begin{bmatrix} q_0(0) \\ q_1(0) \\ q_2(0) 
    \end{bmatrix} = {1 \over \sqrt œÄ} \begin{bmatrix} 
0 & 1/\sqrt{2} \\
1/\sqrt{2} & 0 & 1/2 \\
    & 1/2 & 0\end{bmatrix} \begin{bmatrix} 1 \\ 0 \\ -{1 \over \sqrt{2}}
    \end{bmatrix} =\begin{bmatrix} 0 \\ 0 \\ 0
    \end{bmatrix}
$$



## 3. Interpolatory quadrature rules

**Definition (interpolatory quadrature rule)** Given a set of points $ùê± = [x_1,‚Ä¶,x_n]$
the interpolatory quadrature rule is:
$$
Œ£_n^{w,ùê±}[f] := ‚àë_{k=1}^n w_k f(x_k)
$$
where
$$
w_k := ‚à´_a^b ‚Ñì_k(x) w(x) {\rm d} x
$$


**Proposition (interpolatory quadrature is exact for polynomials)** 
Interpolatory quadrature is exact for all degree $n-1$ polynomials $p$:
$$
‚à´_a^b p(x) w(x) {\rm d}x = Œ£_n^{w,ùê±}[f]
$$

**Proof**
The result follows since, by uniqueness of interpolatory polynomial:
$$
p(x) = ‚àë_{k=1}^n p(x_k) ‚Ñì_k(x)
$$

‚àé

**Example (arbitrary points)** Find the interpolatory quadrature rule for $w(x) = 1$ on $[0,1]$ with  points $[x_1,x_2,x_3] = [0,1/4,1]$?
We have:
$$
\begin{align*}
w_1 = \int_0^1 w(x) ‚Ñì_1(x) {\rm d}x  = \int_0^1 {(x-1/4)(x-1) \over (-1/4)(-1)}{\rm d}x = -1/6 \\
w_2 = \int_0^1 w(x) ‚Ñì_2(x) {\rm d}x  = \int_0^1 {x(x-1) \over (1/4)(-1)}{\rm d}x = 8/9 \\
w_3 = \int_0^1 w(x) ‚Ñì_3(x) {\rm d}x  = \int_0^1 {x(x-1/4) \over 1/4}{\rm d}x = 5/18
\end{align*}
$$
That is we have
$$
Œ£_n^{w,ùê±}[f]  = -{f(0) \over 6} + {8f(1/4) \over 9} + {5 f(1) \over 18}
$$
This is indeed exact for polynomials up to degree $2$ (and no more):
$$
Œ£_n^{w,ùê±}[1] = 1, Œ£_n^{w,ùê±}[x] = 1/2, Œ£_n^{w,ùê±}[x^2] = 1/3, Œ£_n^{w,ùê±}[x^2] = 7/24 ‚â† 1/4.
$$

**Example (Chebyshev roots)** Find the interpolatory quadrature rule for $w(x) = 1/\sqrt{1-x^2}$ on $[-1,1]$ with points equal to the
roots of $T_3(x)$. This is a special case of Gaussian quadrature which we will approach in another way below. We use:
$$
\int_{-1}^1 w(x) {\rm d}x = œÄ, \int_{-1}^1 xw(x) {\rm d}x = 0, \int_{-1}^1 x^2 w(x) {\rm d}x = {œÄ/2}
$$
Recall from before that $x_1,x_2,x_3 = \sqrt{3}/2,0,-\sqrt{3}/2$. Thus we have:
$$
\begin{align*}
w_1 = \int_{-1}^1 w(x) ‚Ñì_1(x) {\rm d}x = \int_{-1}^1 {x(x+\sqrt{3}/2) \over (\sqrt{3}/2) \sqrt{3} \sqrt{1-x^2}}{\rm d}x = {œÄ \over 3} \\
w_2 = \int_{-1}^1 w(x) ‚Ñì_2(x) {\rm d}x = \int_{-1}^1 {(x-\sqrt{3}/2)(x+\sqrt{3}/2) \over (-3/4)\sqrt{1-x^2}}{\rm d}x = {œÄ \over 3} \\
w_3 = \int_{-1}^1 w(x) ‚Ñì_3(x) {\rm d}x = \int_{-1}^1 {(x-\sqrt{3}/2) x \over (-\sqrt{3})(-\sqrt{3}/2) \sqrt{1-x^2}}{\rm d}x = {œÄ \over 3}
\end{align*}
$$
(It's not a coincidence that they are all the same but this will differ for roots of other OPs.) 
That is we have
$$
Œ£_n^{w,ùê±}[f]  = {œÄ \over 3}(f(\sqrt{3}/2) + f(0) + f(-\sqrt{3}/2)
$$
This is indeed exact for polynomials up to degree $n-1=2$, but it goes all the way up to $2n-1 = 5$:
$$
\begin{align*}
Œ£_n^{w,ùê±}[1] &= œÄ, Œ£_n^{w,ùê±}[x] = 0, Œ£_n^{w,ùê±}[x^2] = {œÄ \over 2}, \\
Œ£_n^{w,ùê±}[x^3] &= 0, Œ£_n^{w,ùê±}[x^4] &= {3 œÄ \over 8}, Œ£_n^{w,ùê±}[x^5] = 0 \\
Œ£_n^{w,ùê±}[x^6] &= {9 œÄ \over 32} ‚â†¬†{5 œÄ \over 16}
\end{align*}
$$
We shall explain this miracle next.





## 4. Gaussian quadrature

Gaussian quadrature is the interpolatory quadrature rule corresponding
to the grid $x_k$ defined as the roots of the orthogonal polynomial $q_n(x)$.
We shall see that it is exact for polynomials up to degree $2n-1$, i.e., double
the degree of other interpolatory quadrature rules from other grids.



**Definition (Gauss quadrature)** Given a weight $w(x)$, the Gauss quadrature rule is:
$$
‚à´_a^b f(x)w(x) {\rm d}x ‚âà \underbrace{‚àë_{k=1}^n w_k f(x_k)}_{Œ£_n^w[f]}
$$
where $x_1,‚Ä¶,x_n$ are the eigenvalues of $X_n$ and
$$
w_k := ‚à´_a^b w(x) {\rm d}x Q_n[k,1]^2 = {1 \over Œ±_k^2}.
$$
(Note we have $‚à´_a^b w(x) {\rm d} x q_0(x)^2 = 1$.)

In analogy to how Fourier series are orthogonal with respect to Trapezium rule,
Orthogonal polynomials are orthogonal with respect to Gaussian quadrature:

**Lemma (Discrete orthogonality)**
For $0 ‚â§¬†‚Ñì,m ‚â§¬†n-1$,
$$
Œ£_n^w[q_‚Ñì q_m] = Œ¥_{‚Ñìm}
$$

**Proof**
$$
Œ£_n^w[q_‚Ñì q_m] = ‚àë_{k=1}^n {q_‚Ñì(x_k) q_m(x_k) \over Œ±_k^2}
= \left[q_‚Ñì(x_1)/ Œ±_1 | ‚ãØ | {q_‚Ñì(x_n)/ Œ±_n}\right] 
\begin{bmatrix}
q_m(x_1)/Œ±_1 \\
‚ãÆ \\
q_m(x_n)/Œ±_n \end{bmatrix} = ùêû_‚Ñì Q_n Q_n^‚ä§ ùêû_m = Œ¥_{‚Ñìm}
$$

‚àé

Just as approximating Fourier coefficients using Trapezium rule gives a way of
interpolating at the grid, so does Gaussian quadrature:

**Theorem (interpolation via quadrature)**
$$
f_n(x) = ‚àë_{k=0}^{n-1} c_k^n q_k(x)\hbox{ for } c_k^n := Œ£_n^w[f q_k]
$$
interpolates $f(x)$ at the Gaussian quadrature points $x_1,‚Ä¶,x_n$.

**Proof**

Consider the Vandermonde-like matrix:
$$
VÃÉ := \begin{bmatrix} q_0(x_1) & ‚ãØ & q_{n-1}(x_1) \\
                ‚ãÆ & ‚ã± & ‚ãÆ \\
                q_0(x_n) & ‚ãØ & q_{n-1}(x_n) \end{bmatrix}
$$
and define
$$
Q_n^w := VÃÉ^‚ä§ \begin{bmatrix} w_1 \\ &‚ã± \\&& w_n \end{bmatrix} = \begin{bmatrix} q_0(x_1)w_1 & ‚ãØ &  q_0(x_n) w_n \\
                ‚ãÆ & ‚ã± & ‚ãÆ \\
                w_1q_{n-1}(x_1) & ‚ãØ & q_{n-1}(x_n)w_n \end{bmatrix}
$$
so that
$$
\begin{bmatrix}
c_0^n \\
‚ãÆ \\
c_{n-1}^n \end{bmatrix} = Q_n^w \begin{bmatrix} f(x_1) \\ ‚ãÆ \\ f(x_n) \end{bmatrix}.
$$
Note that if $p(x) = [q_0(x) | ‚ãØ | q_{n-1}(x)] ùêú$ then
$$
\begin{bmatrix}
p(x_1) \\
‚ãÆ \\
p(x_n)
\end{bmatrix} = VÃÉ ùêú
$$
But we see that (similar to the Fourier case)
$$
Q_n^w VÃÉ = \begin{bmatrix} Œ£_n^w[q_0 q_0] & ‚ãØ & Œ£_n^w[q_0 q_{n-1}]\\
                ‚ãÆ & ‚ã± & ‚ãÆ \\
                Œ£_n^w[q_{n-1} q_0] & ‚ãØ & Œ£_n^w[q_{n-1} q_{n-1}]
                \end{bmatrix} = I_n
$$

‚àé

**Corollary** Gaussian quadrature is an interpolatory quadrature rule.



A consequence of being an interpolatory quadrature rule is that it is exact for all
polynomials of degree $n-1$. The _miracle_ of Gaussian quadrature is it is exact for twice
as many!



**Theorem (Exactness of Gauss quadrature)** If $p(x)$ is a degree $2n-1$ polynomial then
Gauss quadrature is exact:
$$
‚à´_a^b p(x)w(x) {\rm d}x = Œ£_n^w[p].
$$

**Proof**
Using polynomial division algorithm (e.g. by matching terms) we can write
$$
p(x) = q_n(x) s(x) + r(x)
$$
where $s$ and $r$ are degree $n-1$. Then we have:
$$
\begin{align*}
Œ£_n^w[p] &= \underbrace{Œ£_n^w[q_n s]}_{\hbox{$0$ since evaluating $q_n$ at zeros}} + Œ£_n^w[r] = ‚à´_a^b r(x) w(x) {\rm d}x
= \underbrace{‚à´_a^b q_n(x)s(x) w(x) {\rm d}x}_{\hbox{$0$ since $s$ is degree $<n$}}  + ‚à´_a^b r(x) w(x) {\rm d}x \\
&= ‚à´_a^b p(x)w(x) {\rm d}x.
\end{align*}
$$
‚àé


**Example (Chebyshev expansions)** 
Consider the construction of Gaussian quadrature for $n = 3$. To determine the weights we need:
$$
w_k^{-1} = Œ±_k^2 = q_0(x_k)^2 + q_1(x_k)^2 + q_2(x_k)^2 = 
{1 \over œÄ} + {2 \over œÄ} x_k^2 + {2 \over œÄ} (2x_k^2-1)^2
$$
We can check each case and deduce that $w_k = œÄ/3$.
Thus we recover the interpolatory quadrature rule.
Further, we can construct the transform
$$
\begin{align*}
Q_3^w &= \begin{bmatrix}
w_1 q_0(x_1) & w_2 q_0(x_2) & w_3 q_0(x_3) \\
w_1 q_1(x_1) & w_2 q_1(x_2) & w_3 q_1(x_3) \\
w_1 q_3(x_1) & w_2 q_3(x_2) & w_3 q_3(x_3) 
\end{bmatrix}\\
&= {œÄ \over 3} \begin{bmatrix} 1/\sqrt{œÄ} & 1/\sqrt{œÄ} & 1/\sqrt{œÄ} \\
                                x_1\sqrt{2/œÄ} & x_2\sqrt{2/œÄ} & x_3\sqrt{2/œÄ} \\
                                (2x_1^2-1)\sqrt{2/œÄ} &(2x_2^2-1)\sqrt{2/œÄ} & (2x_3^2-1)\sqrt{2/œÄ}
                                \end{bmatrix} \\
                                &= 
                                {\sqrt{œÄ} \over 3} \begin{bmatrix} 1 & 1 & 1 \\
                                \sqrt{6}/2 & 0 & -\sqrt{6}/2 \\
                                1/\sqrt{2} &-\sqrt{2} & 1/\sqrt{2}
                                \end{bmatrix}
\end{align*}
$$
We can use this to expand a polynomial, e.g. $x^2$:
$$
Q_3^2 \begin{bmatrix}
x_1^2 \\
x_2^2 \\
x_3^2 
\end{bmatrix} = {\sqrt{œÄ} \over 3} 
\begin{bmatrix} 1 & 1 & 1 \\
\sqrt{6}/2 & 0 & -\sqrt{6}/2 \\
1/\sqrt{2} &-\sqrt{2} & 1/\sqrt{2}
\end{bmatrix} 
\begin{bmatrix} 3/4 \\ 0 \\ 3/4 \end{bmatrix} =
\begin{bmatrix}
{\sqrt{œÄ} / 2} \\
0 \\
{\sqrt{œÄ} / (2\sqrt{2})}
\end{bmatrix}
$$
In other words:
$$
x^2 = {\sqrt œÄ \over 2} q_0(x) + {\sqrt œÄ \over 2\sqrt 2} q_2(x) = {1 \over 2} T_0(x) + {1 \over 2} T_2(x)
$$
which can be easily confirmed.